generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "sqlite"
  url      = env("DATABASE_URL")
}

model Users {
  id        Int      @id @default(autoincrement())
  username  String   @unique
  password  String
  create_at DateTime @default(now())

  indebtedness Indebtedness[]
  account      Account[]
}

model Indebtedness {
  id        Int      @id @default(autoincrement())
  userId    Int
  name      String
  create_at DateTime @default(now())

  user  Users   @relation(fields: [userId], references: [id])
  debts Debts[]
}

model Debts {
  id            Int     @id @default(autoincrement())
  idebtednessId Int
  mount         Int
  description   String
  paid          Boolean @default(false)

  indebtedness Indebtedness @relation(fields: [idebtednessId], references: [id])
}

model Currency {
  id           Int       @id @default(autoincrement())
  name         String    @unique
  abbreviation String
  account      Account[]
}

model Account_type {
  id      Int       @id @default(autoincrement())
  name    String
  account Account[]
}

model Account {
  id             Int    @id @default(autoincrement())
  name           String
  userId         Int
  account_typeId Int
  currencyId     Int

  user        Users         @relation(fields: [userId], references: [id])
  currency    Currency      @relation(fields: [currencyId], references: [id])
  transaction Transaction[]
  accountType Account_type  @relation(fields: [account_typeId], references: [id])
}

model Transaction {
  id          Int      @id @default(autoincrement())
  date_entry  DateTime
  amount      Float
  description String
  accountId   Int
  typeId      Int

  typeTransaction type_transaction @relation(fields: [typeId], references: [id])
  account         Account          @relation(fields: [accountId], references: [id])
}

model type_transaction {
  id   Int    @id @default(autoincrement())
  name String

  transaction Transaction[]
}
